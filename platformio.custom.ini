; get rid of global SAMD_FLASH definition
[SAMD_FLASH]
build_flags =
  -D KNX_FLASH_SIZE=0x4000
  -D KNX_FLASH_OFFSET=0x3BA00
  -D OPENKNX_FLASH_SIZE=0x600
  -D OPENKNX_FLASH_OFFSET=0x3FA00

[RP2040_FLASH]
build_flags =
  -D KNX_FLASH_SIZE=0xC000
  -D KNX_FLASH_OFFSET=0xF0000
  -D OPENKNX_FLASH_SIZE=0x4000
  -D OPENKNX_FLASH_OFFSET=0xFC000
  

;
; customer build_flags
;
[custom]
build_flags =
  ${KNX_TP.build_flags}
  -D SENSORMODULE
  -D LOGICMODULE
  -D KNX_FLASH_CALLBACK
  -D OPENKNX_LOOPTIME_WARNING=100
  ; -D KNX_AUTO_ADAPT
  ; -D KNX_WAIT_FOR_ADDR # ensures rx of an address (GA or PA) with higher ACK probability, but takes 7ms in knx.loop()!
  ; -D OPENKNX_LOOPTIME_WARNING=13 # should be set with KNX_WAIT_FOR_ADDR to OPENKNX_LOOPTIME_WARNING + 7
  -L../OGM-SensorDevices/src/bsec/cortex-m0plus
  -lalgobsec
; lib_compat_mode = strict

; debug parameters
[custom_develop]
extends = custom
build_flags = 
  ${custom.build_flags}
  -D OPENKNX_HEARTBEAT
  ; -D OPENKNX_HEARTBEAT_PRIO
  ; -D OPENKNX_RTT
  ; -D BUFFER_SIZE_UP=10240
  ; -D DEBUG_LOOP_TIME=10  ; will print a info when a loop took more than x ms.
  ; -D LOGIC_TRACE
  ; ; to see trace logs, they must match one of the 5 filters (TRACE_LOG1 .. TRACE_LOG2)
  ; "-D OPENKNX_TRACE1=Common.*"
  ; "-D OPENKNX_TRACE2=Flash.*"
debug_build_flags = -ggdb3
 




; this config block is for specifing options that are valid for all RP2040-based builds
[RP2040_custom]
extends = RP2040, custom
; platform = https://github.com/maxgerhardt/platform-raspberrypi.git#0b2e90a
; platform_packages = framework-arduinopico @ https://github.com/earlephilhower/arduino-pico/releases/download/2.7.3/rp2040-2.7.3.zip
; board = pipico
build_flags = 
  -D SERIAL_DEBUG=Serial
  -D USE_KNX_DMA_UART=0
  -D USE_KNX_DMA_IRQ=0
  -Wunused-variable
  ; -iC:/Users/waldemar.porscha@sap.com/.platformio/packages/framework-arduinopico
  ; "@C:/Users/waldemar.porscha@sap.com/.platformio/packages/framework-arduinopico/lib/platform_inc.txt"
  ;-D NCN5120

; this config block is for specifing options that are valid for all SAMD-based builds
[SAMD_custom]
extends = SAMD, custom
build_flags = 
  -D SERIAL_DEBUG=SerialUSB
  -D KNX_DEBUG_SERIAL=SerialUSB
  -D KNX_SERIAL=Serial1


; this config block is for specifing options that are valid for all RP2040-based develop/debug builds
[RP2040_custom_develop]
extends = RP2040_develop, RP2040_custom, custom_develop
build_flags = 
  ${RP2040_develop.build_flags}
  ${RP2040_custom.build_flags}
  ${custom_develop.build_flags}
  ; -D BOARD_MASIFI_V40
  ; -D BOARD_SMARTMF_1TE_RP2040
  ;-D BOARD_AB_HFPM_HLKLD2420
  -D BOARD_UP1_SENSOR_1KANAL
debug_build_flags = 
  ${custom_develop.debug_build_flags}
  -O0 

; this config block is for specifing options that are valid for all SAMD-based develop/debug builds
[SAMD_custom_develop]
extends = SAMD_custom, SAMD_develop, custom_develop
build_flags = 
  ${SAMD_develop.build_flags}
  ${SAMD_custom.build_flags}
  ${custom_develop.build_flags}
  -D BOARD_MASIFI_V3
  ; -D BOARD_MASIFI_V31
debug_build_flags = 
  ${custom_develop.debug_build_flags}
  -Os 


; this config block is for specifing options that are valid for all RP2040-based release builds
[RP2040_custom_releases]
extends = RP2040_releases, RP2040_custom, custom
build_flags = 
  ${RP2040_releases.build_flags}
  ${RP2040_custom.build_flags}
  ${custom.build_flags}
  -D OPENKNX_DEBUG
  -O0

; this config block is for specifing options that are valid for all SAMD-based release builds
[SAMD_custom_releases]
extends = SAMD_releases, SAMD_custom, custom
build_flags = 
  ${SAMD_releases.build_flags}
  ${SAMD_custom.build_flags}
  ${custom.build_flags}
  -Os


[env:develop_SAMD_Vpm]
extends = SAMD_custom_develop
build_flags =
  ${SAMD_custom_develop.build_flags}
  -D PRESENCEMODULE
build_unflags = OPENKNX_DEBUG

[env:develop_SAMD_Wire]
extends = SAMD_custom_develop
build_flags =
  ${SAMD_custom_develop.build_flags}
  -D WIREMODULE

[env:develop_RP2040_Big]
extends = RP2040_custom_develop, RP2040_2MB
build_flags = 
   ${RP2040_custom_develop.build_flags}
  -D PRESENCEMODULE
  ;-D PMMODULE
  ;-D WIREMODULE
  ;-D HF_SERIAL=Serial2

[env:develop_RP2040_Vpm]
extends = RP2040_custom_develop, RP2040_2MB
build_flags = 
   ${RP2040_custom_develop.build_flags}
  -D PRESENCEMODULE
  -D PMMODULE
  -D HF_SERIAL=Serial2
  ; "-D OPENKNX_TRACE1=Sensor<HLKLD2420>"

[env:upload_USB_SAMD_Vpm]
extends = UPLOAD_USB_SAMD, env:develop_SAMD_Vpm

[env:upload_USB_SAMD_Wire]
extends = UPLOAD_USB_SAMD, env:develop_SAMD_Wire

[env:upload_JLINK_SAMD_Vpm]
extends = UPLOAD_JLINK, env:develop_SAMD_Vpm

[env:upload_JLINK_SAMD_Wire]
extends = UPLOAD_JLINK, env:develop_SAMD_Wire

[env:upload_USB_RP2040_Big]
extends = RP2040_UPLOAD_USB, env:develop_RP2040_Big
upload_protocol = mbed

[env:upload_JLINK_RP2040_Big]
extends = UPLOAD_JLINK, env:develop_RP2040_Big

[env:upload_USB_RP2040_Vpm]
extends = RP2040_UPLOAD_USB, env:develop_RP2040_Vpm
upload_protocol = mbed

[env:upload_JLINK_RP2040_Vpm]
extends = UPLOAD_JLINK, env:develop_RP2040_Vpm


; Releases
[env:release_Sensormodul_Breakout_RP2040]
extends = RP2040_custom_releases, RP2040_2MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_MASIFI_SENSOR_BREAKOUT
  -D PRESENCEMODULE
  ; -D WIREMODULE

[env:release_Sensormodul_v31_SAMD_Wire]
extends = SAMD_custom_releases
build_flags =
   ${SAMD_custom_releases.build_flags}
  -D BOARD_MASIFI_V31
  -D WIREMODULE

[env:release_Sensormodul_v31_SAMD_Vpm]
extends = SAMD_custom_releases
build_flags =
   ${SAMD_custom_releases.build_flags}
  -D BOARD_MASIFI_V31
  -D PRESENCEMODULE

[env:release_Sensormodul_v30_SAMD_Wire]
extends = SAMD_custom_releases
build_flags =
   ${SAMD_custom_releases.build_flags}
  -D BOARD_MASIFI_V3
  -D WIREMODULE

[env:release_Sensormodul_v30_SAMD_Vpm]
extends = SAMD_custom_releases
build_flags =
   ${SAMD_custom_releases.build_flags}
  -D BOARD_MASIFI_V3
  -D PRESENCEMODULE

[env:release_Sensormodul_v40_RP2040]
extends = RP2040_custom_develop, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_MASIFI_V40
  ; -D WIREMODULE
  -D PRESENCEMODULE

[env:release_Sensormodul_v40_RP2040_Vpm]
extends = RP2040_custom_develop, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_MASIFI_V40
  -D PRESENCEMODULE

[env:release_Sensormodul_v40_RP2040_Wire]
extends = RP2040_custom_develop, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_MASIFI_V40
  -D WIREMODULE

[env:release_1TE_RP2040_SmartMF]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_SMARTMF_1TE_RP2040
  ; -D WIREMODULE
  -D PRESENCEMODULE

[env:release_1TE_RP2040_SmartMF_Vpm]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_SMARTMF_1TE_RP2040
  -D PRESENCEMODULE

[env:release_1TE_RP2040_SmartMF_Wire]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_SMARTMF_1TE_RP2040
  -D WIREMODULE

[env:release_PresenceMultiSensor_ABSmartHouse]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
  ${RP2040_custom_releases.build_flags}
  -D BOARD_AB_HFPM_HLKLD2420
  -D PRESENCEMODULE
  -D PMMODULE
  -D HF_SERIAL=Serial2

[env:release_PresenceMultiSensorMR16_ABSmartHouse]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
  ${RP2040_custom_releases.build_flags}
  -D BOARD_AB_HFPM_HLKLD2420_MR16
  -D PRESENCEMODULE
  -D PMMODULE
  -D HF_SERIAL=Serial2

[env:release_UP1_SENSOR_1KANAL]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_UP1_SENSOR_1KANAL
  ; -D WIREMODULE
  -D PRESENCEMODULE
